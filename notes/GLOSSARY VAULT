When you start up the computer, what is the first thing that happens?
 - first execute the software that are in the BIOS
 - check if the system is already to launch
 - second loaded the boot loader (when the Kernel is loaded)
 - Once the boot loader has identified and located the operating system kernel on the storage device, it loads the kernel into memory.
BIOS -> basic input output system. basic a firmware 
FIRMWARE -> comes default in a computer. a small chip stored in the motherboard. A ROM - read only memory. fornece instruções de baixo nível para o hardware do dispositivo, permitindo que ele execute suas funções básicas.
BOOT LOADER -> The boot loader's primary task is to locate the operating system kernel (e.g., Linux kernel or Windows kernel) and load it into memory.

What's a File System?
 - a method or a DS that the OS uses to store and retrieve data in the memory. Most of file system use the concept of directories - also called folders. Everything in linux - even hardware (é representado principalmente por meio do sistema de arquivos virtual /proc e /sys) - is represented in this folder and file structure 
 - examples: /bin, /sbin, /usr/bin, and /usr/sbin. → Where executable programs are stored. | /etc.  → Where configuration files are stored. | /home. → Where user home directories are stored, one for each user.
Why is the file system an essential component?
 - Organização e Estruturação dos Dados, Gerenciamento de Espaço em Disco, Recuperação de Dados e Tolerância a Falhas, etc

Everything in linux is a file, even the commands

What's a server?
 - um computador ou sistema computacional dedicado. um servidor basicamente consiste em um serviço para responder as solicitações de clientes e prover os recursos necessários para a execução de suas operações.

What's is bare metal?
 - consiste em um servidor físico dedicado que é provisionado e usado por um único cliente. o cliente tem acesso direto ao hardware subjacente, sem a intermediação de uma camada de virtualização. ainda são uma escolha preferida para muitas empresas e organizações que têm requisitos específicos de desempenho, segurança e controle de hardware.

Virtualization -> essa camada de virtulização se refere ao software (hypervisor) que permite que um único servidor físico seja dividido em múltiplos ambientes virtuais independentes
Podemos abordar assim os namespaces nos processos de isolamento lógico and o firmware hypervisor que gerencia essas VMs criadas.

CDK x API -> O CDK é ideal para definir e gerenciar infraestrutura na AWS usando código de programação, enquanto a AWS API é usada para interagir diretamente com os serviços da AWS através de solicitações HTTP, com mais controle e flexibilidade, porém com mais complexidade e necessidade de gerenciamento manual.

chmod -> em sistemas Linux e outros sistemas UNIX são utilizadas para controlar o acesso a arquivos e diretórios por parte dos diferentes usuários do sistema. O comando chmod é usado para alterar essas permissões.
 - cada arquivo ou diretório em um sistema UNIX possui três conjuntos de permissões
 1 - permissões de proprietário, 2 - permissões do grupo e 3 - permissões a outros usuários 
 - As permissões r, w, e x correspondem a:
    r (read): Permissão de leitura. Permite visualizar o conteúdo do arquivo ou listar o conteúdo do diretório. -> [4]
    w (write): Permissão de escrita. Permite modificar o arquivo (editar, adicionar, excluir) ou criar e excluir arquivos em um diretório. -> [2]
    x (execute): Permissão de execução. Permite executar o arquivo (se for um programa ou script) ou acessar um diretório. -> [1]
por exemplo: chmod 777 <file> //da todas as permissões a todos; chmod 600 <file> /da permissão ao dono de ler e escrever sobre esse arquivo, mas não executar

Acessar o AWS pelo console, uma possibilidade. Podemos também ter acesso a um servidor EC2 por meio do terminal usando o ssh + <arquivo .pem> nome_servidor@public_IP

Why use shell script?
 - faster
 - automations 
 - GUIs would make servers heavy, so shell commands are used
 - O uso do shebang é uma maneira conveniente de especificar qual interpretador deve ser usado para executar um script
 - o shebang permite que você escreva scripts que podem ser facilmente compartilhados e executados em diferentes sistemas Unix-like sem preocupações com a localização específica dos interpretadores nos diferentes sistemas.

Difference between sh and Bash
O sh e o bash são ambos interpretadores de shell utilizados em sistemas Unix-like
o sh usa o conceito de fazer redirecionamentos
For a long time, /bin/sh used to point to /bin/bash on most GNU/Linux systems. As a result, it had almost become safe to ignore the difference between the two. But that started to change recently.
Some popular examples of systems where /bin/sh does not point to /bin/bash (and on some of which /bin/bash may not even exist) are:

    Modern Debian and Ubuntu systems, which symlink sh to dash by default;
    Busybox, which is usually run during the Linux system boot time as part of initramfs. It uses the ash shell implementation.
    BSD systems, and in general any non-Linux systems. OpenBSD uses pdksh, a descendant of the KornShell. FreeBSD's sh is a descendant of the original Unix Bourne shell. Solaris has its own sh which for a long time was not POSIX-compliant; a free implementation is available from the Heirloom project.

Which one to use
some prefer sh, it is standardized, it is much simpler and easier to learn, it is portable across POSIX systems — even if they happen not to have bash, they are required to have sh
If you run a script with bash the display way more useful error messages in the case of syntax error. You can simply save time by using bash. 
em suma, /sh e /bash are the same, sh usa o mesmo conceito de redirecionar para outro shell, como Bash ou Dash. mas nao sao iguais por que alguns OS decidiram usar dash por default. 
